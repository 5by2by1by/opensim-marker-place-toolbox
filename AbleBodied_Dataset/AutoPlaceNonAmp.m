%-------------------------------------------------------------------------% 
% AutoPlaceNonAmp.m
% 
% This file is a wrapper script which performs an automated marker 
% placement algorithm on a scaled OpenSim musculoskeletal walking model. 
% This wrapper is used for able-bodied subjects. It requires a starting 
% .osim model with markers, .trc marker data from one walking trial (single
% stride), and an inverse kinematics setup .xml. Modify the fields in this
% template for the specific subject model being used.
% 
% Before running, ensure the following folders are in the parent working
% directory:
%     IKSetup         Contains generic setup file and trial specific setup 
%                     files are written
%     MarkerData      Contains marker trajectory files for each trial
%     -  PREF         Preferred walking speed trials
%     Models          Contains the models used in IK
%     -  AutoPlaced   Where output models will be written
%     -  Scaled       Where input model is stored
%
% Before running, modify script options cell appropriately.
% 
% Written by Mark Price 10/2017
% Last modified 10/2/2017
%
%-------------------------------------------------------------------------%

close all
clear all
clc

%% Set directories and intersubject information in a general options structure

global myModel fileID iteration

import org.opensim.modeling.*

numSubj = 8;

% Create strings for the subject name and type of prosthesis.
subjOptions.subjNames = {'S01','S02','S04','S05','S06','S08','S09','S10'};

% Also define paths to individual subject folders in options structure
for i = 1:numSubj
    subjOptions.subjPaths{i} = [pwd '\' subjOptions.subjNames{i} '\'];
    subjOptions.prosType{i} = 'no-amp';
end

% Specify IK setup files for each subject (single trial each) 
subjOptions.IKSetup = {'S01_PSF_T06_IK_Settings.xml',...
    'S02_PSF_T01_IK_Settings.xml','S04_PSF_T02_IK_Settings_2.xml',...
    'S05_PSF_T01_IK_Settings.xml','S06_PSF_T02_IK_Settings.xml',...
    'S08_PSF_T04_IK_Settings.xml','S09_PSF_T03_IK_Settings.xml',...
    'S10_PSF_T03_IK_Settings.xml'};

% Specify marker data .trc files for each subject
subjOptions.markerData = {'S01_PSF_T06.trc','S02_PSF_T01.trc',...
    'S04_PSF_T02.trc','S05_PSF_T01.trc','S06_PSF_T02.trc',...
    'S08_PSF_T04.trc','S09_PSF_T03.trc','S10_PSF_T03.trc'};

subjOptions.inputModel = {'S01_RRA_Model_PSF_newmass.osim',...
    'S02_RRA_Model_PSF_newmass.osim','S04_RRA_Model_newmass.osim',...
    'S05_Scaled_BK_5.osim','S06_RRA_Model_newmass.osim',...
    'S08_RRA_Model_newmass.osim','S09_RRA_Model_newmass.osim',...
    'S10_RRA_Model_newmass.osim'};

subjOptions.jointNames = {{},{},{},{},{},{},{},{}};
subjOptions.coordLockNames = {{},{},{},{},{},{},{},{}};
subjOptions.coordLockStates = {[],[],[],[],[],[],[],[]};

subjOptions.fixedMarkerCoords = {{'Sternum x','Sternum y','Sternum z'},...
    {'Sternum x','Sternum y','Sternum z'},{'Sternum x','Sternum y','Sternum z'}...
    {'Sternum x','Sternum y','Sternum z'},{'Sternum x','Sternum y','Sternum z'}...
    {'Sternum x','Sternum y','Sternum z'},{'Sternum x','Sternum y','Sternum z'}...
    {'Sternum x','Sternum y','Sternum z'}};



% markerFile = [trcDataDir '\S02_PSF_T01.trc']; % Name of the experimental walking marker data .trc file (single trial)

% Store names of the model markers in cell arrays. Each run of the
% algorithm will require one cell array of marker names to adjust. Store
% sets of markers to be placed separately or under different conditions in 
% separate arrays.
% subjOptions.markerNames = cell(numSubj,1);
subjOptions.markerNames{1} = {'Sternum','R.Acromium','L.Acromium','Top.Head','R.ASIS',...
    'L.ASIS','R.PSIS','L.PSIS','R.Great.Tro','L.Great.Tro','R.Iliac.Crest',...
    'L.Iliac.Crest','V.Sacral','R.Thigh.Upper.Post','R.Thigh.Upper.Ant',...
	'R.Thigh.Lower.Ant','R.Thigh.Lower.Post','R.Knee.Lat','R.Knee.Med',...
    'R.Shank.Upper.Post','R.Shank.Upper.Ant','R.Shank.Lower.Ant',...
    'R.Shank.Lower.Post','R.Ankle.Lat','R.Ankle.Med','R.Heel.Upper',...
    'R.Heel.Med','R.Heel.Lat','R.Toe.Lat','R.Toe.Med','R.Toe.Tip',...
    'L.Thigh.Upper.Post','L.Thigh.Upper.Ant','L.Thigh.Lower.Ant',...
    'L.Thigh.Lower.Post','L.Knee.Lat','L.Knee.Med','L.Shank.Upper.Post',...
    'L.Shank.Upper.Ant','L.Shank.Lower.Ant','L.Shank.Lower.Post','L.Ankle.Lat',...
    'L.Ankle.Med','L.Heel.Upper','L.Heel.Med','L.Heel.Lat','L.Toe.Lat',...
    'L.Toe.Med','L.Toe.Tip','Cervical.Spine','Back'};
subjOptions.markerNames{2} = {'Sternum','R.Acromium','L.Acromium','Top.Head','R.ASIS',...
    'L.ASIS','R.PSIS','L.PSIS','R.Great.Tro','L.Great.Tro','R.Iliac.Crest',...
    'L.Iliac.Crest','V.Sacral','R.Thigh.Upper.Post','R.Thigh.Upper.Ant',...
	'R.Thigh.Lower.Ant','R.Thigh.Lower.Post','R.Knee.Lat','R.Knee.Med',...
    'R.Shank.Upper.Post','R.Shank.Upper.Ant','R.Shank.Lower.Ant',...
    'R.Shank.Lower.Post','R.Ankle.Lat','R.Ankle.Med','R.Heel.Upper',...
    'R.Heel.Med','R.Heel.Lat','R.Toe.Lat','R.Toe.Med','R.Toe.Tip',...
    'L.Thigh.Upper.Post','L.Thigh.Upper.Ant','L.Thigh.Lower.Ant',...
    'L.Thigh.Lower.Post','L.Knee.Lat','L.Knee.Med','L.Shank.Upper.Post',...
    'L.Shank.Upper.Ant','L.Shank.Lower.Ant','L.Shank.Lower.Post','L.Ankle.Lat',...
    'L.Ankle.Med','L.Heel.Upper','L.Heel.Med','L.Heel.Lat','L.Toe.Lat',...
    'L.Toe.Med','L.Toe.Tip','Cervical.Spine','Back'};
subjOptions.markerNames{3} = {'Sternum','R.Acromium','L.Acromium','Top.Head','R.ASIS',...
    'L.ASIS','R.PSIS','L.PSIS','R.Great.Tro','L.Great.Tro','R.Iliac.Crest',...
    'L.Iliac.Crest','V.Sacral','R.Thigh.Upper.Post','R.Thigh.Upper.Ant',...
	'R.Thigh.Lower.Ant','R.Thigh.Lower.Post','R.Knee.Lat','R.Knee.Med',...
    'R.Shank.Upper.Post','R.Shank.Upper.Ant','R.Shank.Lower.Ant',...
    'R.Shank.Lower.Post','R.Ankle.Lat','R.Ankle.Med','R.Heel.Upper',...
    'R.Heel.Med','R.Heel.Lat','R.Toe.Lat','R.Toe.Med','R.Toe.Tip',...
    'L.Thigh.Upper.Post','L.Thigh.Upper.Ant','L.Thigh.Lower.Ant',...
    'L.Thigh.Lower.Post','L.Knee.Lat','L.Knee.Med','L.Shank.Upper.Post',...
    'L.Shank.Upper.Ant','L.Shank.Lower.Ant','L.Shank.Lower.Post','L.Ankle.Lat',...
    'L.Ankle.Med','L.Heel.Upper','L.Heel.Med','L.Heel.Lat','L.Toe.Lat',...
    'L.Toe.Med','L.Toe.Tip','Cervical.Spine','Back'};
subjOptions.markerNames{4} = {'Sternum','R.Acromium','L.Acromium','Top.Head','R.ASIS',...
    'L.ASIS','R.PSIS','L.PSIS','R.Great.Tro','L.Great.Tro','R.Iliac.Crest',...
    'L.Iliac.Crest','V.Sacral','R.Thigh.Upper.Post','R.Thigh.Upper.Ant',...
	'R.Thigh.Lower.Ant','R.Thigh.Lower.Post','R.Knee.Lat','R.Knee.Med',...
    'R.Shank.Upper.Post','R.Shank.Upper.Ant','R.Shank.Lower.Ant',...
    'R.Shank.Lower.Post','R.Ankle.Lat','R.Ankle.Med','R.Heel.Upper',...
    'R.Heel.Med','R.Heel.Lat','R.Toe.Lat','R.Toe.Med','R.Toe.Tip',...
    'L.Thigh.Upper.Post','L.Thigh.Upper.Ant','L.Thigh.Lower.Ant',...
    'L.Thigh.Lower.Post','L.Knee.Lat','L.Shank.Upper.Post',...
    'L.Shank.Upper.Ant','L.Shank.Lower.Ant','L.Shank.Lower.Post','L.Ankle.Lat',...
    'L.Ankle.Med','L.Heel.Upper','L.Heel.Med','L.Heel.Lat','L.Toe.Lat',...
    'L.Toe.Med','L.Toe.Tip','Cervical.Spine','Back'};
subjOptions.markerNames{5} = {'Sternum','R.Acromium','L.Acromium','Top.Head','R.ASIS',...
    'L.ASIS','R.PSIS','L.PSIS','R.Great.Tro','L.Great.Tro','R.Iliac.Crest',...
    'L.Iliac.Crest','V.Sacral','R.Thigh.Upper.Post','R.Thigh.Upper.Ant',...
	'R.Thigh.Lower.Ant','R.Thigh.Lower.Post','R.Knee.Lat','R.Knee.Med',...
    'R.Shank.Upper.Post','R.Shank.Upper.Ant','R.Shank.Lower.Ant',...
    'R.Shank.Lower.Post','R.Ankle.Lat','R.Ankle.Med','R.Heel.Upper',...
    'R.Heel.Med','R.Heel.Lat','R.Toe.Lat','R.Toe.Med','R.Toe.Tip',...
    'L.Thigh.Upper.Post','L.Thigh.Upper.Ant','L.Thigh.Lower.Ant',...
    'L.Thigh.Lower.Post','L.Knee.Lat','L.Knee.Med','L.Shank.Upper.Post',...
    'L.Shank.Upper.Ant','L.Shank.Lower.Ant','L.Shank.Lower.Post','L.Ankle.Lat',...
    'L.Ankle.Med','L.Heel.Upper','L.Heel.Med','L.Heel.Lat','L.Toe.Lat',...
    'L.Toe.Med','L.Toe.Tip','Cervical.Spine','Back'};
subjOptions.markerNames{6} = {'Sternum','R.Acromium','L.Acromium','Top.Head','R.ASIS',...
    'L.ASIS','R.PSIS','L.PSIS','R.Great.Tro','L.Great.Tro','R.Iliac.Crest',...
    'L.Iliac.Crest','V.Sacral','R.Thigh.Upper.Post','R.Thigh.Upper.Ant',...
	'R.Thigh.Lower.Ant','R.Thigh.Lower.Post','R.Knee.Lat','R.Knee.Med',...
    'R.Shank.Upper.Post','R.Shank.Upper.Ant','R.Shank.Lower.Ant',...
    'R.Shank.Lower.Post','R.Ankle.Lat','R.Ankle.Med','R.Heel.Upper',...
    'R.Heel.Med','R.Heel.Lat','R.Toe.Lat','R.Toe.Med','R.Toe.Tip',...
    'L.Thigh.Upper.Post','L.Thigh.Upper.Ant','L.Thigh.Lower.Ant',...
    'L.Thigh.Lower.Post','L.Knee.Lat','L.Knee.Med','L.Shank.Upper.Post',...
    'L.Shank.Upper.Ant','L.Shank.Lower.Ant','L.Shank.Lower.Post','L.Ankle.Lat',...
    'L.Ankle.Med','L.Heel.Upper','L.Heel.Med','L.Heel.Lat','L.Toe.Lat',...
    'L.Toe.Med','L.Toe.Tip','Cervical.Spine','Back'};
subjOptions.markerNames{7} = {'Sternum','R.Acromium','L.Acromium','Top.Head','R.ASIS',...
    'L.ASIS','R.PSIS','L.PSIS','R.Great.Tro','L.Great.Tro','R.Iliac.Crest',...
    'L.Iliac.Crest','V.Sacral','R.Thigh.Upper.Post','R.Thigh.Upper.Ant',...
	'R.Thigh.Lower.Ant','R.Thigh.Lower.Post','R.Knee.Lat','R.Knee.Med',...
    'R.Shank.Upper.Post','R.Shank.Upper.Ant','R.Shank.Lower.Ant',...
    'R.Shank.Lower.Post','R.Ankle.Lat','R.Ankle.Med','R.Heel.Upper',...
    'R.Heel.Med','R.Heel.Lat','R.Toe.Lat','R.Toe.Med','R.Toe.Tip',...
    'L.Thigh.Upper.Post','L.Thigh.Upper.Ant','L.Thigh.Lower.Ant',...
    'L.Thigh.Lower.Post','L.Knee.Lat','L.Knee.Med','L.Shank.Upper.Post',...
    'L.Shank.Upper.Ant','L.Shank.Lower.Ant','L.Shank.Lower.Post','L.Ankle.Lat',...
    'L.Ankle.Med','L.Heel.Upper','L.Heel.Med','L.Heel.Lat','L.Toe.Lat',...
    'L.Toe.Med','L.Toe.Tip','Cervical.Spine','Back'};
subjOptions.markerNames{8} = {'Sternum','R.Acromium','L.Acromium','Top.Head','R.ASIS',...
    'L.ASIS','R.PSIS','L.PSIS','R.Great.Tro','L.Great.Tro','R.Iliac.Crest',...
    'L.Iliac.Crest','V.Sacral','R.Thigh.Upper.Post','R.Thigh.Upper.Ant',...
	'R.Thigh.Lower.Ant','R.Thigh.Lower.Post','R.Knee.Lat','R.Knee.Med',...
    'R.Shank.Upper.Post','R.Shank.Upper.Ant','R.Shank.Lower.Ant',...
    'R.Shank.Lower.Post','R.Ankle.Lat','R.Ankle.Med','R.Heel.Upper',...
    'R.Heel.Med','R.Heel.Lat','R.Toe.Lat','R.Toe.Med','R.Toe.Tip',...
    'L.Thigh.Upper.Post','L.Thigh.Upper.Ant','L.Thigh.Lower.Ant',...
    'L.Thigh.Lower.Post','L.Knee.Lat','L.Knee.Med','L.Shank.Upper.Post',...
    'L.Shank.Upper.Ant','L.Shank.Lower.Ant','L.Shank.Lower.Post','L.Ankle.Lat',...
    'L.Ankle.Med','L.Heel.Upper','L.Heel.Med','L.Heel.Lat','L.Toe.Lat',...
    'L.Toe.Med','L.Toe.Tip','Cervical.Spine','Back'};
     
% Names of model joints whose placements (location and orientation) in the 
% parent segment are also to be optimized
% jointNames = {};



%% Setup and run initial RoB marker placement

iteration = 1;

% for i = 4:numSubj
for i = 1
    
    ikSetupDir = [subjOptions.subjPaths{i} 'IKSetup\'];
    genericSetupForIK = [ikSetupDir subjOptions.IKSetup{i}];
    
    ikResultsDir = [subjOptions.subjPaths{i} 'IKResults\'];
    outputMotionFile = [ikResultsDir 'autoPlaceWorker.mot']; % Name of the 'worker' output motion file which is updated with each iteration
    
    trcDataDir = [subjOptions.subjPaths{i} 'MarkerData\PREF\'];
    markerFile = [trcDataDir subjOptions.markerData{i}];
    
    inputModelDir = [subjOptions.subjPaths{i} 'Models\Scaled\'];
    inputModel = [inputModelDir subjOptions.inputModel{i}];
    
    modelDir = [subjOptions.subjPaths{i} 'Models\AutoPlaced\'];
    modelFile = [modelDir 'autoPlaceWorker.osim']; % Name of the 'worker' model file which is updated with each iteration
    
    subject = subjOptions.subjNames{i};
    prosType = subjOptions.prosType{i};
    markerNames = subjOptions.markerNames{i};
    fixedMarkerCoords = subjOptions.fixedMarkerCoords{i};
    jointNames = subjOptions.jointNames{i};
    coordLockNames = subjOptions.coordLockNames{i};
    coordLockStates = subjOptions.coordLockStates{i};
    
    % Update IK setup file to reflect current file paths for walking trial
    ikTool = InverseKinematicsTool(genericSetupForIK);
    factorProp  = ikTool.getPropertyByName('model_file');
    PropertyHelper.setValueString(modelFile,factorProp); % Set the .osim model file path in the setup .xml
    factorProp  = ikTool.getPropertyByName('marker_file');
    PropertyHelper.setValueString(markerFile,factorProp); % Set the .trc marker file path in the setup .xml
    factorProp  = ikTool.getPropertyByName('output_motion_file');
    PropertyHelper.setValueString(outputMotionFile,factorProp); % Set the model path in the setup .xml
    ikTool.print(genericSetupForIK);

    % Create new file for log of marker search
    fileID = fopen(['coarseMarkerSearch_log_' subject '_' prosType '_' char(datetime('now','TimeZone','local','Format','d-MMM-y_HH.mm.ss_Z')) '.txt'], 'w');

    newName = [subject '_' prosType '_ALLBODY_auto_marker_place_' char(datetime('now','TimeZone','local','Format','d-MMM-y_HH.mm.ss')) '.osim'];
    newModelName = [modelDir newName];  % set name for new .osim model created after placing markers

%     model = 'S02_RRA_Model_PSF_newmass.osim'; % Provide name of input model (scaled, standard marker placement) 
%     myModel = [inputModelDir model];

    % Set model and algorithm options:
    options.IKsetup = genericSetupForIK;  % IK setup file
    options.inputModel = Model(inputModel);                            % Input model
    
%     options.subjectMass = 67.3046;                      % Subject mass in kg
    options.newName = newModelName;                     % Output model name
    options.modelWorker = modelFile;                    % Worker model name
    options.motionWorker = outputMotionFile;            % Output motion name

    % Choose the lock state of each coordinate in the socket joint
    options.coordLockNames = coordLockNames;
    options.coordLockStates = coordLockStates;
%     options.coordLockNames = {};
%     options.coordLockStates = [];
    % options.coordLockName = {'socket_tx','socket_ty','socket_tz','socket_flexion','socket_adduction','socket_rotation'};
    % options.coordLockStates = [false, false, false, false, false, false];

    % Choose which set of markers is being placed.
    options.markerNames = markerNames;

    % Choose which model joints are being placed.
    options.jointNames = jointNames;

    % List marker coordinates to be locked - algorithm cannot move them from
    % hand-picked location:
    options.fixedMarkerCoords = fixedMarkerCoords;
    % options.fixedMarkerCoords = {'L_HEEL_SUP y','L_TOE x','L_TOE y','L_TOE z'}; 
%     options.fixedMarkerCoords = {'Sternum x','Sternum y','Sternum z'}; % use sternum marker if available
    % options.fixedMarkerCoords = {'R_AC x','L_AC x','L_HEEL_SUP y','L_TOE x','L_TOE y','L_TOE z'};% can optionally lock AC markers in X if no sternum

    % Flag to tell algorithm to minimize socket flexion and pistoning at
    % specific points during stride in addition to marker error.
    options.optZerosFlag = false;

    % Specify marker search convergence threshold. All markers must move less 
    % than convThresh mm from start position at each markerset iteration to 
    % converge. If 1, a full pass with no marker changes must take place:
    options.convThresh = 1; 

    tic     %Start timer

    X_robpros = coarseMarkerSearch(options);    % Run autoplace algorithm

    % Save output model to specified name.
    model = Model(modelFile);
    model.initSystem();
    model.print(newModelName);

    fclose(fileID);     % Close log.

end